// (C) 2006, Michael Gruhn.

// NO WARRANTY IS GRANTED. THIS PLUG-IN IS PROVIDED ON AN "AS IS" BASIS, WITHOUT
// WARRANTY OF ANY KIND. NO LIABILITY IS GRANTED, INCLUDING, BUT NOT LIMITED TO,
// ANY DIRECT OR INDIRECT,  SPECIAL,  INCIDENTAL OR CONSEQUENTIAL DAMAGE ARISING
// OUT OF  THE  USE  OR INABILITY  TO  USE  THIS PLUG-IN,  COMPUTER FAILTURE  OF
// MALFUNCTION INCLUDED.  THE USE OF THE SOURCE CODE,  EITHER  PARTIALLY  OR  IN
// TOTAL, IS ONLY GRANTED,  IF USED IN THE SENSE OF THE AUTHOR'S INTENTION,  AND
// USED WITH ACKNOWLEDGEMENT OF THE AUTHOR. FURTHERMORE IS THIS PLUG-IN A  THIRD
// PARTY CONTRIBUTION,  EVEN IF INCLUDED IN REAPER(TM),  COCKOS INCORPORATED  OR
// ITS AFFILIATES HAVE NOTHING TO DO WITH IT.  LAST BUT NOT LEAST, BY USING THIS
// PLUG-IN YOU RELINQUISH YOUR CLAIM TO SUE IT'S AUTHOR, AS WELL AS THE CLAIM TO
// ENTRUST SOMEBODY ELSE WITH DOING SO.


desc:Master Limiter (DD)
//tags: dynamics limiter
//author: LOSER

slider1:-3<-20,-.1,.1>-Threshold (dB)
slider2:200<0,1000,1>-Look Ahead (�s)
slider3:100<1,1000,1>-Attack (�s)
slider4:0<0,10,.1>-Hold (ms)
slider5:250<1,1000,1>-Release (ms)
slider6:-.1<-6,0,.01>-Limit (dB)
slider7:0<-20,0,1>-Reduction

filename:0,DGFX/masterlimiter/bg.png
filename:1,DGFX/masterlimiter/knob.png
filename:2,DGFX/masterlimiter/screw.png
filename:3,DGFX/masterlimiter/bgmcp.png
filename:4,DGFX/masterlimiter/meter.png

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

import DGFX/tk_lib_d.jsfx-inc 
// vu meter library, skip this line if not using a meter
import DGFX/tk-vu_lib_d.jsfx-inc

options:no_meter
options:gfx_hz=60
// write a cool name to store jsfx memory below
options:gmem=MasterLimiterD     

@init
  ext_tail_size=-1;
  ext_gr_meter = 0;
  gain = seekgain = 1;
  c_ampdB = 8.65617025;
  THISJSFX_VERSION = 1;
  gfx_ext_retina = 1;
  gfx_clear=0;
  lastCap=1;
  mouse_wheel=1;
  Number_input = 0;
  number_input_invalid = 0;
  number_input_x = 0;
  number_input_y=0;
  ext_noinit=1;

  // tk extra features
  lastCap=1;
  mouse_wheel=1;
  is_recording = 0; is_playing = 0; is_stopped = 1;
  !initialized_playstates?(while_playing = while_recording = while_stopped = 1);
  Number_input = 0;
  number_input_raw = 0;
  number_input_use = 0;
  komma = 0;
  in_key = 0;
  number_input_x = 0;
  number_input_y=0;
  number_input_slider = 0;
  number_input_min=0;
  number_input_max=0;
  number_input_invalid = 0;
  number_input_sign=1;
  s2_numbers_of_sliders = 7; // set the number of sliders for gorup linking


  mouse_sensivity();

  function parameters_update() (
    parameters_update_on = 1;
    group_parameters(max_local_buffer_size-64); // tk extra features

    // Paste all contents of @slider here
        treshdB = min(slider1,-.1);
        tresh = exp(treshdB/c_ampdB);

        treshdB == -.1 ? (gain = seekgain = 1; );

        look = floor(max( min( slider2/1000000*srate , 500000) , 1));
        attack = exp( -treshdB/max( slider3/1000000*srate , 0) / c_ampdB  ) ;
        hold = slider4/1000*srate;
        under_tresh = 0;
        release = exp( -treshdB/max( slider5/1000*srate , 0) / c_ampdB ) ;

        limit = exp(slider6/c_ampdB);

        mode_make_up = 1;

        volume = limit / (mode_make_up ? tresh : 1);

        seekgain = 1;
    parameters_update_on = 0;
    caller = 0;
  );
  
  // skip this 3 lines if not using a gain reduction meter
  //mn_meter_reinit(40);
  //GRmeter.mn_meter_init(); // you can change GRmeter with any name you want for multiple meters

  mnmeterspeed=40;
  meter_maxdbtunning=1; // ----------------------------------------------------------------------------- needle range
  // skip this 3 lines if not using a gain reduction meter
  GRmeter.mn_meter_reinit2(mnmeterspeed, meter_maxdbtunning);
  GRmeter.mn_meter_init(); // you can change GRmeter with any name you want for multiple meters

@slider
  caller = 1;

@serialize // add this block for tk extra features
  file_var(0, while_playing);
  file_var(0, while_recording);
  file_var(0, while_stopped); file_var(0, zoom_off);
  file_var(0, LA2Kan_VERSION);
  file_var(0, link_group);
  seriloop = 0;
  loop(64*16 + 27 + 16 +16 +16,
  file_var(0, gmem[seriloop]);
  seriloop += 1;
  );
  seriloop = 0;
  loop(200*16,
  file_var(0, group_generics[seriloop]);
  seriloop += 1;
  );

@block     // add the following lines at the start of @block if you'll use a gain reduction meter
  //srate != srate_old ? (GRmeter.mn_meter_init();   mn_meter_reinit(meterspeed76); caller = 1);
  srate != srate_old ? (GRmeter.mn_meter_init();   GRmeter.mn_meter_reinit2(mnmeterspeed, meter_maxdbtunning); caller = 1);
  srate_old = srate;

@sample
  S2_sample_on = 1;

  // extra tk features
  gmem[16*64 + 10 + link_group] != 1 ? link_group = 0;
  group_check_smpl();

  caller == 1 ? (
    parameters_update_on == 0 ? (
      parameters_update();
    );
  );

  // extra tk features
  playstates();
  process = 0;
  while_playing ? is_playing ? process = 1;
  while_recording ? is_recording ? process = 1;
  while_stopped ? is_stopped ? process = 1;
  initialized_playstates=1;

  process == 1 ? (
    detect = max(abs(spl0),abs(spl1));

    bufPos[0] = spl0;
    bufPos[look] = spl1;
    (bufPos += 1) >= look ? bufPos = 0 ;
    spl0 = bufPos[0];
    spl1 = bufPos[look];

    // Prevent From Preopening, I Know There Might Be Transients In Between, But Fuck'Em :/
    detect = max(max(abs(spl0),abs(spl1)),detect);

    detect > tresh ? (
        under_tresh = 0;
        hold ? seekgain = min( tresh/detect ,seekgain ) : seekgain = tresh/detect;
    ):(
        (under_tresh+=1)>hold ? (seekgain = 1; );
    );

    gain > seekgain ? gain=max(gain/attack,seekgain):gain=min(gain*release,seekgain);

    spl0 *= gain * volume;
    spl1 *= gain * volume;

    // Prevent From Unecessary Distortion, Better Distort Just Once Even Tho Hard :)
    max(abs(spl0),abs(spl1)) > limit ? gain = seekgain; // Uber Nifty Metering For This Doesn't Work :(

    spl0 = max(min(spl0,limit),-limit);
    spl1 = max(min(spl1,limit),-limit); 
    
    grvalue=exp((log(gain)*c_ampdB)/10);

    ext_gr_meter = slider7 = log(gain)*c_ampdB;
    sliderchange(64);
    //GRmeter.mnmetersample(grvalue*db2ratio(-4.35)); //3.7 
    GRmeter.gr_mnmetersample(grvalue); //3.7 
  ):(GRmeter.gr_mnmetersample(0); ext_gr_meter=0;);
// ----------------- GRAPHICS -----------------

//full  1452   459                   // full ui background dimensions
//mcp    507   627                   // mcp version background dimensions
//win    489   gfx_h                 // windows minimum width (and macOS maybe)
//lin    619   gfx_h                 // linux minimum width
// gfx_h= full_h * os_w / full_w 
// gfx_w = gfx_h*mcp_w/mcp/h         // around this value for some reason the mcp aspect ratio is a bit taller
// I find it easier to just adjust the size manually in the jsfx ui and write the values to @gfx width height line

<? // @gfx setup
  w_bg=1118;
  h_bg=439;
  mcp_ratio="wide";
  include("DGFX/ddconfig.jsfx-inc");
?>
    tk_gfx_setup();
    gfx_ext_flags == 0 ? (  // full ui
        unscaled_factor=0.7;
        set_background(0);
        //GRmeter.draw_meter(180, 26, 0.97, 4); //draw meter x, y, zoom, png       --remove this line if not using a meter
        GRmeter.draw_meter2(4, 180, 26, 0.97, 1, 0.85, 0, 1, 38, 111, -0.2, 1); //draw meter png, x, y, zoom, x_center_offset, y_center_offset, needle_line_start, needle_line_end, leftmostDegree, rightmostDegree, dblimit, needlebias        --remove this line if not using a meter

                                        //mode=0 you manually write your code for handling mouse input; mode=1 automatic handling
        //Knobs                     (slider    default     min      max  step         x          y   frames  scaling  file  mode  reverse) (frames = 0 = auto calculate)   (step=0=default floating numbers as step)   
        kHold.parameter_config      ( 4,             0,      0,      10,  0.1,       136,       172,     0,       1,     2,    1,       0);    
        kLookAhead.parameter_config ( 2,           200,      0,    1000,    1,       136,        95,     0,       1,     2,    1,       0);    
        kAttack.parameter_config    ( 3,           100,      1,    1000,    1,       378,        95,     0,       1,     2,    1,       0);    
        kRelease.parameter_config   ( 5,           250,      1,    1000,    1,       378,       172,     0,       1,     2,    1,       0);    

        kThreshold.parameter_config ( 1,            -3,    -20,    -0.1,  0.1,        30,        70,     0,       1,     1,    1,       0);    
        kLimit.parameter_config     ( 6,          -0.1,     -6,       0, 0.01,       443,        72,     0,       1,     1,    1,       0);    
        //.parameter_config      (  ,              ,       ,        ,     ,          ,          ,     0,       1,      ,    1,       0);    
        //Buttons              (slider     orient  off_val   on_val     x        y           scaling  file  mode) (orient = 0 = horizontal image; orient = 1 = vertical image)
        //.button_config         (  ,              ,       ,        ,       ,        ,              1,      ,    1);
        setup_dmenu("LOSER Master Limiter", "1", "Analog Obsession, Tukan Studios, Pitufodelbosque, ReArtist", 0.5); // setup menu, arguments: jsfx name, version, graphics, zoom

        mouse_wheel=0;
    ):gfx_ext_flags == 1 ? ( // embedded mcp ui
        set_background(3,0.651,0.667,0.647);
                                        //mode=0 you manually write your code for handling mouse input; mode=1 automatic handling
        //Knobs                     (slider    default     min      max  step         x          y   frames  scaling  file  mode  reverse) (frames = 0 = auto calculate)   (step=0=default floating numbers as step)   
        kHold.parameter_config      ( 4,             0,      0,      10,  0.1,       70,       145,     0,       1,     2,    1,       0);    
        kLookAhead.parameter_config ( 2,           200,      0,    1000,    1,       10,       145,     0,       1,     2,    1,       0);    
        kAttack.parameter_config    ( 3,           100,      1,    1000,    1,      128,       145,     0,       1,     2,    1,       0);    
        kRelease.parameter_config   ( 5,           250,      1,    1000,    1,      192,       145,     0,       1,     2,    1,       0);    

        kThreshold.parameter_config ( 1,            -3,    -20,    -0.1,  0.1,        22,        52,     0,       1,     1,    1,       0);    
        kLimit.parameter_config     ( 6,          -0.1,     -6,       0, 0.01,       132,        52,     0,       1,     1,    1,       0);    
        //.parameter_config      (  ,              ,       ,        ,     ,          ,          ,     0,       1,      ,    1,       0);    
        //Buttons              (slider     orient  off_val   on_val     x        y           scaling  file  mode) (orient = 0 = horizontal image; orient = 1 = vertical image)
        //.button_config         (  ,              ,       ,        ,       ,        ,              1,      ,    1);
       
        gfx_r=gfx_g=gfx_b=0;
        barmeter_hor(grvalue, 30/2, 25/2, 414/2, 374/2, 1); // grvalue, y, h, x, w

        mouse_wheel=0;
    );
    
  // update parameters
  S2_sample_on == 0 ? (
  gmem[16*64 + 10 + link_group] != 1 ? link_group = 0; // tk extra features
  group_check_smpl(); // tk extra features
    caller == 1 ? (
        parameters_update_on == 0 ? (
          parameters_update();
        );
    );
  );
  S2_sample_on = 0;
