desc:Gate (DD)
//author: Witti

slider1:-120<-120,0,0.1>-Threshold (dB)
slider2:50<50,500,1>-Hold (ms)
slider3:1<1,50,0.1>-Fade-in (ms)
slider4:100<10,1000,1>-Fade-out (ms)
slider5:10<0,25,0.1>-RMS Size (ms)
slider6:0<0,1,1{Off,On}>-Delta
slider7:0<-24,24,0.1>-Output (dB)
slider8:0<0,1,1>-Sidechain

// 0 background >> 1-2 knobs >> 3-10 buttons >>  leds >> 11 meter
filename:0,DGFX/wittigate/bg.png
filename:1,DGFX/wittigate/bgmcp.png
filename:2,DGFX/wittigate/meter.png
filename:3,DGFX/wittigate/knob-b.png
filename:4,DGFX/wittigate/knob-s.png
filename:5,DGFX/wittigate/knob-screw.png
filename:6,DGFX/wittigate/button-ext.png
filename:7,DGFX/wittigate/button-delta.png




import DGFX/tk_lib_d.jsfx-inc 
// vu meter library
import DGFX/tk-vu_lib_d.jsfx-inc

options:no_meter
options:gfx_hz=60
options:gmem=wittigateD

in_pin:left input
in_pin:right input
in_pin:left sidechain
in_pin:right sidechain
out_pin:left output
out_pin:right output

@init

  THISJSFX_VERSION = 1;
  gfx_ext_retina = 1;
  gfx_clear=0;
  lastCap=1;
  mouse_wheel=1;
  Number_input = 0;
  number_input_invalid = 0;
  number_input_x = 0;
  number_input_y=0;
  //ext_nodenorm = 1; // anti denormal noise disabled
  ext_noinit=1; // skip init on every transport start


  // tk extra features
  lastCap=1;
  mouse_wheel=1;
  is_recording = 0; is_playing = 0; is_stopped = 1;
  while_playing = 1; while_recording = 1; while_stopped = 1;
  Number_input = 0;
  number_input_raw = 0;
  number_input_use = 0;
  komma = 0;
  in_key = 0;
  number_input_x = 0;
  number_input_y=0;
  number_input_slider = 0;
  number_input_min=0;
  number_input_max=0;
  number_input_invalid = 0;
  number_input_sign=1;
  s2_numbers_of_sliders = 8;
  s2_numbers_of_generics = 0;
  group_generics = 0; // fuer group_generics[bis zu 200] <-- ?
  sliders_old = group_generics + 16*200;
  generics_old = sliders_old + 16*64;

  mouse_sensivity();
  silentcnt=0;
  seekv=1;
  seekto=1;
  function parameters_update() (
    parameters_update_on = 1;
    group_parameters(); // tk extra features
    //Rest of @slider section
      thresh=10^(slider1/20);
      sillen=slider2*srate*0.001|0;
      fadein=1/pow(10,1/(slider3*srate*0.001));
      fadeout=1/pow(10,1/(slider4*srate*0.001));
      rmscoef=1/pow(10,1/(slider5*srate*0.001));
      output=10^(slider7/20);
    //
    parameters_update_on = 0;
    caller = 0;
  );

  gr_meter=1;
  gr_meter_decay = exp(1/(1*srate));
  ext_gr_meter = 0;
  //  --------------- VU METER  --------------- //
  meterspeed76 = 40;
  meter_maxdbtunning=1.27;
  GRmeter.mn_meter_reinit2(meterspeed76, meter_maxdbtunning);
  GRmeter.mn_meter_init();
@slider
  caller = 1;

@serialize // add this block for tk extra features
  file_var(0, while_playing);
  file_var(0, while_recording);
  file_var(0, while_stopped); file_var(0, zoom_off);
  file_var(0, LA2Kan_VERSION);
  file_var(0, link_group);
  seriloop = 0;
  loop(64*16 + 27 + 16,
  file_var(0, gmem[seriloop]);
  seriloop += 1;
  );
  seriloop = 0;
  loop(200*16,
  file_var(0, group_generics[seriloop]);
  seriloop += 1;
  );

@block
  // meter functionality
  srate != srate_old ? (GRmeter.mn_meter_init();   GRmeter.mn_meter_reinit2(meterspeed76, meter_maxdbtunning); caller = 1);
  srate_old = srate;
  
@sample
  S2_sample_on = 1;

  // extra tk features
  gmem[16*64 + 10 + link_group] != 1 ? link_group = 0;
  group_check_smpl();

  caller == 1 ? (
    parameters_update_on == 0 ? (
      parameters_update();
    );
  );

  // extra tk features
  playstates();
  process = 0;
  while_playing ? is_playing ? process = 1;
  while_recording ? is_recording ? process = 1;
  while_stopped ? is_stopped ? process = 1;
  
  process==1?(
  
    slider8?(
      in0=spl2;
      in1=spl3;
    ):(
      in0=spl0;
      in1=spl1;
    );
    
    slider5 > 0 ? (
    ave=in0*in0+in1*in1;
    runave=ave+rmscoef*(runave-ave);
    det=sqrt(runave);
    a=det > thresh;
    ):(
    ave = 0;
    a=abs(in0) > thresh || abs(in1) > thresh;
    );

    a ? (
    silentcnt=0;
    seekto=1;
    ):(
    (silentcnt+=1) > sillen ? seekto=0;
    );

    seekto > 0.5 ? ( // fading in
    seekv=seekv*fadein + (1-fadein);
    ):( // fading out
    seekv=seekv*fadeout;
    );

    s0=spl0;
    s1=spl1;

    spl0=spl0*seekv;
    spl1=spl1*seekv;

    slider6 == 1 ? (
    spl0=s0-spl0;
    spl1=s1-spl1;
    );

    spl0*=output;
    spl1*=output;

  grv=seekv;
  GRmeter.gr_mnmetersample(grv); //3.7 ,(grvdb2ratio(-0)
  ):(GRmeter.gr_mnmetersample(0)); //3.7);

//full  1452   459                   // full ui background dimensions
//mcp    507   627                   // mcp version background dimensions
//win    489   gfx_h                 // windows minimum width (and macOS maybe)
//lin    619   gfx_h                 // linux minimum width
// gfx_h= full_h * os_w / full_w 
// gfx_w = gfx_h*mcp_w/mcp/h         // around this value for some reason the mcp aspect ratio is a bit taller

<? // @gfx setup
  w_bg=1452;
  h_bg=459;
  mcp_ratio="tall";
  include("DGFX/ddconfig.jsfx-inc");
?>
  tk_gfx_setup();
  gfx_ext_flags == 0 ? (  // full ui
    unscaled_factor=0.5;
    set_background(0);
    GRmeter.draw_meter2(2, 468, 37, 1.1, 1, 1, 0.2, 1.1, 37, 108, 0, 1.2);
                                      //mode=0 you manually write your code for handling mouse input; mode=1 automatic handling
    //Knobs                      (slider  default     min      max   step   x        y   frames  scaling  file  mode  reverse) (frames = 0 = auto calculate)      
    kThres.parameter_config      (1,        -120,   -120,       0, 0.1,   20,      199-157,     0,         1,     3,    1,       1);    
    kHold.parameter_config       (2,          50,     50,     500,   1,  161,      199-157,     0,         1,     3,    1,       0);    
    kFadeIn.parameter_config     (3,           1,      1,      50, 0.1,  310,      190-157,     0,         1,     4,    1,       0);    
    kFadeOut.parameter_config    (4,         100,     10,    1000,   1,  310,      285-157,     0,         1,     4,    1,       0);    
    kRMS.parameter_config        (5,          10,      0,      25, 0.1,  520,      332-170,     0,       0.8,     5,    1,       0);    
    kOut.parameter_config        (7,           0,    -24,      24, 0.1,  600,      332-170,     0,       0.8,     5,    1,       0);    
    //Buttons                    (slider   orient  off_val    on_val    x        y           scaling  file   mode) (orient = 0 = horizontal image; orient = 1 = vertical image)
    bSC.button_config            (8,           0,      0,       1,     404,     212-157,             1,     6,     1);
    bDelta.button_config         (6,           0,      0,       1,     404,     282-157,             1,     7,     1);

    gfx_a=gfx_r=gfx_g=gfx_b=0.8;
    kThres.attached_label("THRESH",12, "Verdana",30,'b');
    kHold.attached_label("HOLD",12, "Verdana",30,'b');
    kFadeIn.attached_label("FADE IN",4, "Verdana",27,'b');
    kFadeOut.attached_label("FADE OUT",4, "Verdana",27,'b');
    kRMS.attached_label("RMS",-4, "Verdana",26,'b');
    kOut.attached_label("OUT",-4, "Verdana",26,'b');

    setup_dmenu("RMS Gate by Witti", "1", "Analog Obsession, Tukan Studios, Pitufodelbosque, ReArtist", 0.6); // setup menu, arguments: jsfx name, version, graphics, zoom
    mouse_wheel=0;
  ):gfx_ext_flags == 1 ? ( // embedded mcp ui
    set_background(1,0.054,0.047,0.039);
    //GRmeter.draw_meter(25, -12, 1.25, 11);
    GRmeter.draw_meter2(2, 8, -12, 1.25, 1, 1, 0.2, 1.1, 37, 108, 0, 1.2);
                                      //mode=0 you manually write your code for handling mouse input; mode=1 automatic handling
    //Knobs                      (slider  default     min      max  step    x        y   frames  scaling  file  mode  reverse) (frames = 0 = auto calculate)       
    kFadeIn.parameter_config     (3,           1,      1,      50,  0.1,    20,     130,     0,       1.3,     4,    1,       0);    
    kFadeOut.parameter_config    (4,         100,     10,    1000,    1,   155,     130,     0,       1.3,     4,    1,       0);   
    kThres.parameter_config      (1,        -120,   -120,       0,  0.1,    20,     225,     0,     0.767,     3,    1,       1);    
    kHold.parameter_config       (2,          50,     50,     500,    1,   155,     225,     0,     0.767,     3,    1,       0);    
    //kRMS.parameter_config        (6,         100,      0,     100,    0,   123,     153,     0,         1,    12,    5,       0);    
    //kOut.parameter_config        (6,         100,      0,     100,    0,   123,     153,     0,         1,    12,    5,       0);    
    //Buttons                    (slider   orient  off_val    on_val    x        y           scaling  file   mode) (orient = 0 = horizontal image; orient = 1 = vertical image)
    bDelta.button_config         (6,           0,      0,       1,     116,     160,             1,     7,     1);
    gfx_a=gfx_r=gfx_g=gfx_b=0.8;
    kThres.attached_label("THRS",-8, "Verdana",50,'b');
    kHold.attached_label("HOLD",-8, "Verdana",50,'b');
    kFadeIn.attached_label("IN",-8, "Verdana",35,'b');
    kFadeOut.attached_label("OUT",-8, "Verdana",35,'b');
    bDelta.attached_label("FADE",-80, "Verdana",45,'b');

    //kRMS.attached_label("RMS",-4, "Verdana",26,'b');
    //kOut.attached_label("OUT",-4, "Verdana",26,'b');
    mouse_wheel=0;
  );
  
  // update parameters
  S2_sample_on == 0 ? (
  gmem[16*64 + 10 + link_group] != 1 ? link_group = 0; // tk extra features
  group_check_gfx(); // tk extra features
    caller == 1 ? (
        parameters_update_on == 0 ? (
          parameters_update();
        );
    );
  );
  S2_sample_on = 0;
